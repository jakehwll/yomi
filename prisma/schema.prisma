generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Series {
  id         String    @id @unique @default(cuid())
  title      String
  folder     String
  thumbnail  String?
  updated_at DateTime? @updatedAt
  created_at DateTime? @default(now())
  books      Book[]
}

model Book {
  id           String         @id @unique @default(cuid())
  title        String
  folder       String
  thumbnail    String?
  updated_at   DateTime?      @updatedAt
  created_at   DateTime?      @default(now())
  seriesId     String?
  Series       Series?        @relation(fields: [seriesId], references: [id], onDelete: Cascade)
  ReadProgress ReadProgress[]
}

model Account {
  id            String  @id @default(cuid())
  email         String  @unique
  password      String
  userId        String
  isAdmin       Boolean
  id_token      String?
  session_state String?
  user          User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id           String         @id @default(cuid())
  email        String?        @unique
  accounts     Account[]
  ReadProgress ReadProgress[]
}

model ReadProgress {
  id       String @unique @default(cuid())
  progress Int
  userId   String
  bookId   String
  User     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  Book     Book   @relation(fields: [bookId], references: [id], onDelete: Cascade)

  @@id([userId, bookId])
}
